/*!
 DMXzone Sockets
 Version: 1.0.0
 (c) 2020 DMXzone.com
 @build 2020-12-10 14:06:16
 */
dmx.__sockets={},dmx.Socket=function(t,e,s,o){t=t||"/",e=dmx.extend(!0,{transports:["websocket"]},e);var c=dmx.__sockets[t];return c||(c=io(t,e),"websocket"==e.transports[0]&&c.on("reconnect_attempt",function(){c.io.opts.transports=["polling","websocket"]}),dmx.__sockets[t]=c),s&&Object.keys(s).forEach(function(n){c.on(n,function(t,e){console.log("DATA1",t),dmx.Flow.run(s[n],new dmx.DataScope({$param:t},o)).then(function(t){console.log("DATA2",t),"function"==typeof e&&e(t)})})}),c},dmx.Actions({"sockets.emit":function(t){t=this.parse(t),dmx.Socket(t.namespace||"/").emit(t.eventName,t.params)},"sockets.request":function(e){return e=this.parse(e),new Promise(function(t){dmx.Socket(e.namespace||"/").emit(e.eventName,e.params,t)})}}),dmx.Component("socket",{initialData:{id:null,connected:!1,disconnected:!0},attributes:{namespace:{type:String,default:"/"},options:{type:Object,default:{}}},methods:{emit:function(t,e){this.socket.emit(t,e)},connect:function(){this.socket.connect()},request:function(e,n){var s=this.socket;return new Promise(function(t){s.emit(e,n,t)})}},events:{connect:Event,disconnect:Event,connect_error:Event,message:Event},message:function(t,e){this.dispatchEvent("message",{},e,t)},trigger:function(t){this.set("id",this.socket.id),this.set("connected",this.socket.connected),this.set("disconnected",this.socket.disconnected),this.dispatchEvent(t)},render:function(e){if(e.textContent)try{this.cfg=(window.Hjson?Hjson:JSON).parse(e.textContent)}catch(t){console.error(t),dmx.debug&&console.debug(e.textContent)}this.socket=dmx.Socket(this.props.namespace,this.props.options,this.cfg,this),this.socket.on("connect",this.trigger.bind(this,"connect")),this.socket.on("disconnect",this.trigger.bind(this,"disconnect")),this.socket.on("connect_error",this.trigger.bind(this,"connect_error")),this.socket.onAny(this.message.bind(this))}});
//# sourceMappingURL=../maps/dmxSockets.js.map
