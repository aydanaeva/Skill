{"version":3,"sources":["components/calendar.js","components/calendarSourceBase.js","components/calendarSource.js","components/calendarSourceGoogle.js","components/calendarEvent.js"],"names":["dmx","Component","constructor","node","parent","this","onDateClick","bind","onEventClick","onEventMouseEnter","onEventMouseLeave","onEventDrop","onEventResize","onEventRender","onEventDestroy","onSelect","parseSource","BaseComponent","call","attributes","timezone","type","String","default","date","locale","height","aspect-ratio","Number","view","views","Array","theme","hide-non-current-dates","Boolean","selectable","editable","no-event-overlap","business-hours","google-calendar-api-key","no-fixed-week-count","event-order","event-limit","now-indicator","bs4-tooltip","bs4-tooltip-placement","bs4-tooltip-title","views-options","Object","methods","gotoDate","calendar","updateSize","prev","next","prevYear","nextYear","today","events","dateclick","MouseEvent","eventclick","eventmouseenter","eventmouseleave","eventdrop","Event","eventresize","select","info","dispatchEvent","jsEvent","dateStr","allDay","preventDefault","event","getEventProps","scope","DataScope","source","internalEventSource","extendedProps","bs4Tooltip","$","el","tooltip","placement","parse","bs4TooltipPlacement","title","bs4TooltipTitle","props","start","startStr","end","endStr","child","register","$parseAttributes","self","prototype","dom","getAttributes","forEach","attr","name","$addBinding","value","isArray","push","parseAttribute","toCamelCase","argument","modifiers","constraint","binding","removeAttribute","fullName","render","plugins","filter","window","toUpperCase","slice","FullCalendar","Calendar","googleCalendarApiKey","timeZone","defaultDate","defaultView","aspectRatio","themeSystem","selectConstraint","showNonCurrentDates","eventOverlap","businessHours","fixedWeekCount","eventOrder","eventLimit","nowIndicator","dateClick","eventClick","eventMouseEnter","eventMouseLeave","eventDrop","eventResize","eventRender","eventDestroy","header","left","center","right","toString","$parse","update","changeView","setOption","equal","beforeDestroy","destroy","id","toISOString","attrName","re","RegExp","replace","nodeType","i","length","attribute","specified","test","split","part","pos","indexOf","substr","str","a","b","console","error","initialData","color","background-color","border-color","text-color","class-name","overlap","refetch","set","getEventSourceById","extends","parseEvents","event-id","event-title","event-url","event-start","event-end","event-all-day","event-days-of-week","event-start-time","event-end-time","event-start-recur","event-end-recur","event-group-id","event-rendering","event-color","event-background-color","event-border-color","event-text-color","event-class-name","event-editable","event-overlap","event-extended-props","success","failure","repeatItems","data","prop","children","addEventSource","assign","onSuccess","onFailure","google-calendar-id","err","url","all-day","days-of-week","start-time","end-time","start-recur","end-recur","group-id","rendering","extended-props"],"mappings":"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","file":"../dmxCalendar/dmxCalendar.js","sourcesContent":["dmx.Component('calendar', {\r\n\r\n    constructor: function(node, parent) {\r\n        this.onDateClick = this.onDateClick.bind(this);\r\n        this.onEventClick = this.onEventClick.bind(this);\r\n        this.onEventMouseEnter = this.onEventMouseEnter.bind(this);\r\n        this.onEventMouseLeave = this.onEventMouseLeave.bind(this);\r\n        this.onEventDrop = this.onEventDrop.bind(this);\r\n        this.onEventResize = this.onEventResize.bind(this);\r\n        this.onEventRender = this.onEventRender.bind(this);\r\n        this.onEventDestroy = this.onEventDestroy.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.parseSource = this.parseSource.bind(this);\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'timezone': { // moment-timezone or luxon plugin for named timezones\r\n            type: String,\r\n            default: 'local' // \"local\", \"UTC\"\r\n        },\r\n\r\n        'date': {\r\n            type: String,\r\n            default: null // ISO8601 format\r\n        },\r\n\r\n        'locale': { // locales include needed\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'height': { // height of entire calendar\r\n            type: String,\r\n            default: null // interger, \"parent\", \"auto\"\r\n        },\r\n\r\n        'aspect-ratio': { // width-to-height aspect ratio\r\n            type: Number,\r\n            default: 1.35\r\n        },\r\n\r\n        'view': { // dayGrid, timeGrid, list plugin\r\n            type: String,\r\n            default: null // name of view like \"dayGridMonth\"\r\n        },\r\n\r\n        'views': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'theme': { // bootstrap plugin\r\n            type: String,\r\n            default: 'standard' // \"standard\", \"bootstrap\"\r\n        },\r\n\r\n        'hide-non-current-dates': { // dayGrid plugin (dayGridMonth only)\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'selectable': { // interaction plugin\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        /* will use custom parser for this\r\n        'constraint': { // interaction plugin\r\n            type: [String, Object], // https://fullcalendar.io/docs/selectConstraint\r\n            default: null\r\n        },\r\n        */\r\n\r\n        'editable': { // interaction plugin\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        'no-event-overlap': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'business-hours': {\r\n            type: Boolean, // https://fullcalendar.io/docs/businessHours\r\n            default: false\r\n        },\r\n\r\n        'google-calendar-api-key': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'no-fixed-week-count': {\r\n            type: Boolean, // https://fullcalendar.io/docs/fixedWeekCount\r\n            default: false\r\n        },\r\n\r\n        'event-order': {\r\n            type: String, // https://fullcalendar.io/docs/eventOrder\r\n            default: 'start,-duration,allDay,title'\r\n        },\r\n\r\n        'event-limit': {\r\n            type: [Boolean, Number], // https://fullcalendar.io/docs/eventLimit\r\n            default: false\r\n        },\r\n\r\n        'now-indicator': {\r\n            type: Boolean, // https://fullcalendar.io/docs/nowIndicator\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip-placement': {\r\n            type: String, // expression\r\n            default: '\"top\"'\r\n        },\r\n\r\n        'bs4-tooltip-title': {\r\n            type: String, // expression\r\n            default: 'event.extendedProps.description || event.title'\r\n        },\r\n\r\n        'views-options': {\r\n            type: Object, // https://fullcalendar.io/docs/view-specific-options\r\n            default: {}\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        gotoDate: function(date) {\r\n            this.calendar.gotoDate(date);\r\n        },\r\n\r\n        updateSize: function() {\r\n            this.calendar.updateSize();\r\n        },\r\n\r\n        prev: function() {\r\n            this.calendar.prev();\r\n        },\r\n\r\n        next: function() {\r\n            this.calendar.next();\r\n        },\r\n\r\n        prevYear: function() {\r\n            this.calendar.prevYear();\r\n        },\r\n\r\n        nextYear: function() {\r\n            this.calendar.nextYear();\r\n        },\r\n\r\n        today: function() {\r\n            this.calendar.today();\r\n        }\r\n    },\r\n\r\n    events: {\r\n        dateclick: MouseEvent, // interaction plugin\r\n        eventclick: MouseEvent,\r\n        eventmouseenter: MouseEvent,\r\n        eventmouseleave: MouseEvent,\r\n        eventdrop: Event,\r\n        eventresize: Event,\r\n        select: Event\r\n    },\r\n\r\n    onDateClick: function(info) {\r\n        var cancelled  = !this.dispatchEvent('dateclick', info.jsEvent, {\r\n            date: info.dateStr,\r\n            allDay: info.allDay\r\n        });\r\n\r\n        if (cancelled) {\r\n            info.jsEvent.preventDefault();\r\n        }\r\n    },\r\n\r\n    onEventClick: function(info) {\r\n        var cancelled  = !this.dispatchEvent('eventclick', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n\r\n        if (cancelled) {\r\n            info.jsEvent.preventDefault();\r\n        }\r\n    },\r\n\r\n    onEventMouseEnter: function(info) {\r\n        this.dispatchEvent('eventmouseenter', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventMouseLeave: function(info) {\r\n        this.dispatchEvent('eventmouseleave', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventDrop: function(info) {\r\n        this.dispatchEvent('eventdrop', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventResize: function(info) {\r\n        this.dispatchEvent('eventresize', info.jsEvent, {\r\n            event: this.getEventProps(info.event)\r\n        });\r\n    },\r\n\r\n    onEventRender: function(info) {\r\n        var scope = new dmx.DataScope({\r\n            event: this.getEventProps(info.event)\r\n        }, this);\r\n\r\n        if (info.event.source && info.event.source.internalEventSource.extendedProps && info.event.source.internalEventSource.extendedProps.bs4Tooltip) {\r\n            $(info.el).tooltip({\r\n                placement: dmx.parse(info.event.source.internalEventSource.extendedProps.bs4TooltipPlacement, scope) || 'top',\r\n                title: dmx.parse(info.event.source.internalEventSource.extendedProps.bs4TooltipTitle, scope) || ''\r\n            });\r\n        } else if (this.props['bs4-tooltip']) {\r\n            $(info.el).tooltip({\r\n                placement: dmx.parse(this.props['bs4-tooltip-placement'], scope) || 'top',\r\n                title: dmx.parse(this.props['bs4-tooltip-title'], scope) || ''\r\n            });\r\n        }\r\n    },\r\n\r\n    onEventDestroy: function(info) {\r\n        if (this.props['bs4-tooltip']) {\r\n            $(info.el).tooltip('dispose');\r\n        }\r\n    },\r\n\r\n    onSelect: function(info) {\r\n        this.dispatchEvent('select', info.jsEvent, {\r\n            start: info.startStr,\r\n            end: info.endStr,\r\n            allDay: info.allDay\r\n        });\r\n    },\r\n\r\n    parseSource: function(child) {\r\n        if (child instanceof dmx.Component('calendar-source-base')) {\r\n            child.calendar = this.calendar;\r\n            child.register();\r\n        }\r\n    },\r\n\r\n    $parseAttributes: function(node) {\r\n        var self = this;\r\n\r\n        dmx.BaseComponent.prototype.$parseAttributes.call(this, node);\r\n\r\n        // parse dmx-business-hours\r\n        dmx.dom.getAttributes(node).forEach(function(attr) {\r\n            if (attr.name == 'business-hours') {\r\n                self.$addBinding(attr.value, function(value) {\r\n                    if (value != null) {\r\n                        if (!Array.isArray(this.props['business-hours'])) {\r\n                            self.props['business-hours'] = [];\r\n                        }\r\n\r\n                        self.props['business-hours'].push(value);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // views options custom parse\r\n        this.parseAttribute(node, 'views-options').forEach(function(attr) {\r\n            self.$addBinding(attr.value, function(value) {\r\n                self.props['views-options'][this.toCamelCase(attr.argument)] = value || {};\r\n            });\r\n        });\r\n\r\n        // constraint custom parse\r\n        this.parseAttribute(node, 'constraint').forEach(function(attr) {\r\n            if (attr.modifiers['business-hours']) {\r\n                // special case for businessHours modifier\r\n                self.props.constraint = 'businessHours';\r\n            } else {\r\n                if (attr.binding) {\r\n                    // dynamic attribute\r\n                    self.$addBinding(attr.value, function(value) {\r\n                        self.props.constraint = value;\r\n                    });\r\n                } else {\r\n                    // static attribute\r\n                    self.props.constraint = attr.value;\r\n                }\r\n            }\r\n\r\n            // we need to remove the attribute so that the default parser doesn't parse it\r\n            node.removeAttribute(attr.fullName);\r\n        });\r\n    },\r\n\r\n    render: function(node) {\r\n        // detect installed plugins\r\n        var plugins = ['interaction', 'dayGrid', 'timeGrid', 'list', 'bootstrap', 'googleCalendar'].filter(function(name) {\r\n            return !!window['FullCalendar' + name[0].toUpperCase() + name.slice(1)];\r\n        });\r\n\r\n        this.calendar = new FullCalendar.Calendar(node, {\r\n            plugins: plugins,\r\n            googleCalendarApiKey: this.props['google-calendar-api-key'],\r\n            timeZone: this.props.timezone,\r\n            defaultDate: this.props.date,\r\n            defaultView: this.props.view,\r\n            locale: this.props.locale,\r\n            height: this.props.height,\r\n            aspectRatio: this.props['aspect-ratio'],\r\n            themeSystem: this.props.theme,\r\n            selectable: this.props.selectable,\r\n            selectConstraint: this.props.constraint,\r\n            editable: this.props.editable,\r\n            showNonCurrentDates: !this.props['hide-non-current-dates'],\r\n            eventOverlap: !this.props['no-event-overlap'],\r\n            businessHours: this.props['business-hours'],\r\n            fixedWeekCount: !this.props['no-fixed-week-count'],\r\n            eventOrder: this.props['event-order'],\r\n            eventLimit: this.props['event-limit'],\r\n            nowIndicator: this.props['now-indicator'],\r\n            dateClick: this.onDateClick,\r\n            eventClick: this.onEventClick,\r\n            eventMouseEnter: this.onEventMouseEnter,\r\n            eventMouseLeave: this.onEventMouseLeave,\r\n            eventDrop: this.onEventDrop,\r\n            eventResize: this.onEventResize,\r\n            eventRender: this.onEventRender,\r\n            eventDestroy: this.onEventDestroy,\r\n            select: this.onSelect,\r\n            views: this.props['views-options'],\r\n            header: {\r\n                left: 'today prev,next',\r\n                center: 'title',\r\n                right: this.props.views.toString()\r\n            }\r\n        });\r\n\r\n        this.$parse();\r\n\r\n        this.calendar.render();\r\n    },\r\n\r\n    update: function(props) {\r\n        if (props.view != this.props.view) {\r\n            this.calendar.changeView(this.props.view || 'dayGridMonth');\r\n        }\r\n\r\n        if (props.date != this.props.date) {\r\n            this.calendar.gotoDate(this.props.date);\r\n        }\r\n\r\n        if (props.timezone != this.props.timezone) {\r\n            this.calendar.setOption('timeZone', this.props.timezone);\r\n        }\r\n\r\n        if (props.locale != this.props.locale) {\r\n            this.calendar.setOption('locale', this.props.locale);\r\n        }\r\n\r\n        if (props.theme != this.props.theme) {\r\n            this.calendar.setOption('themeSystem', this.props.theme);\r\n        }\r\n\r\n        if (props['hide-non-current-dates'] != this.props['hide-non-current-dates']) {\r\n            this.calendar.setOption('showNonCurrentDates', !this.props['hide-non-current-dates']);\r\n        }\r\n\r\n        if (props.selectable != this.props.selectable) {\r\n            this.calendar.setOption('selectable', this.props.selectable);\r\n        }\r\n\r\n        if (props.editable != this.props.editable) {\r\n            this.calendar.setOption('editable', this.props.editable);\r\n        }\r\n\r\n        if (props['no-event-overlap'] != this.props['no-event-overlap']) {\r\n            this.calendar.setOption('eventOverlap', !this.props['no-event-overlap']);\r\n        }\r\n\r\n        if (!dmx.equal(props['business-hours'], this.props['business-hours'])) {\r\n            this.calendar.setOption('businessHours', this.props['business-hours']);\r\n        }\r\n\r\n        if (!dmx.equal(props.constraint, this.props.constraint)) {\r\n            this.calendar.setOption('selectConstraint', this.props.constraint);\r\n        }\r\n\r\n        if (props['google-calendar-api-key'] != this.props['google-calendar-api-key']) {\r\n            this.calendar.setOption('googleCalendarApiKey', this.props['google-calendar-api-key']);\r\n        }\r\n\r\n        if (props['no-fixed-week-count'] != this.props['no-fixed-week-count']) {\r\n            this.calendar.setOption('fixedWeekCount', !this.props['no-fixed-week-count']);\r\n        }\r\n\r\n        if (props['event-order'] != this.props['event-order']) {\r\n            this.calendar.setOption('eventOrder', this.props['event-order']);\r\n        }\r\n\r\n        if (props['event-limit'] != this.props['event-limit']) {\r\n            this.calendar.setOption('eventLimit', this.props['event-limit']);\r\n        }\r\n\r\n        if (props['now-indicator'] != this.props['now-indicator']) {\r\n            this.calendar.setOption('nowIndicator', this.props['now-indicator']);\r\n        }\r\n\r\n        if (!dmx.equal(props['views-options'], this.props['views-options'])) {\r\n            this.calendar.setOption('views', this.props['views-options']);\r\n        }\r\n    },\r\n\r\n    beforeDestroy: function() {\r\n        this.calendar.destroy();\r\n    },\r\n\r\n    getEventProps: function(event) {\r\n        return {\r\n            id: event.id,\r\n            start: event.start && event.start.toISOString(),\r\n            end: event.end && event.end.toISOString(),\r\n            allDay: event.allDay,\r\n            title: event.title,\r\n            extendedProps: event.extendedProps\r\n        };\r\n    },\r\n\r\n    // special parse required for constraint attribute\r\n    // supports static/dynamic attributes\r\n    parseAttribute: function(node, attrName) {\r\n        var attributes = [];\r\n        var re = new RegExp('^(dmx\\\\-bind:)?' + attrName.replace(/[-[\\]{}()*+?.,\\^$|#\\s]/g, '\\\\$&'), 'i');\r\n\r\n        if (node.nodeType == 1) {\r\n            for (var i = 0; i < node.attributes.length; i++) {\r\n                var attribute = node.attributes[i];\r\n\r\n                if (attribute && attribute.specified && re.test(attribute.name)) {\r\n                    var name = attribute.name;\r\n                    var argument = null;\r\n                    var modifiers = {};\r\n\r\n                    name = name.replace(/^dmx\\-bind:/i, '');\r\n\r\n                    name.split('.').forEach(function(part, i) {\r\n                        if (i === 0) {\r\n                            name = part;\r\n                        } else {\r\n                            var pos = part.indexOf(':');\r\n                            if (pos > 0) {\r\n                                modifiers[part.substr(0, pos)] = part.substr(pos + 1);\r\n                            } else {\r\n                                modifiers[part] = true;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var pos = name.indexOf(':');\r\n                    if (pos > 0) {\r\n                        argument = name.substr(pos + 1);\r\n                        name = name.substr(0, pos);\r\n                    }\r\n\r\n                    attributes.push({\r\n                        name: name,\r\n                        binding: attribute.name.indexOf('dmx-bind:') === 0,\r\n                        fullName: attribute.name,\r\n                        value: attribute.value,\r\n                        argument: argument,\r\n                        modifiers: modifiers\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    },\r\n\r\n    toCamelCase: function(str) {\r\n        return str.replace(/-(\\w)/g, function(a, b) {\r\n            return b.toUpperCase();\r\n        });\r\n    }\r\n\r\n});","dmx.Component('calendar-source-base', {\r\n\r\n    constructor: function(node, parent, source) {\r\n        if (parent instanceof dmx.Component('calendar')) {\r\n            this.calendar = parent.calendar;\r\n        } else {\r\n            console.error('calendar-source can only be child of calendar component.');\r\n        }\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    initialData: {\r\n        id: null,\r\n        events: []\r\n    },\r\n\r\n    attributes: {\r\n        'color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'background-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'border-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'text-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'class-name': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'editable': {\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        'overlap': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'bs4-tooltip-placement': {\r\n            type: String, // expression\r\n            default: '\"top\"'\r\n        },\r\n\r\n        'bs4-tooltip-title': {\r\n            type: String, // expression\r\n            default: 'event.extendedProps.description || event.title'\r\n        }\r\n    },\r\n    \r\n    methods: {\r\n        refetch: function() {\r\n            this.refetch();\r\n        }\r\n    },\r\n\r\n    render: function() {\r\n        if (!this.calendar) return;\r\n        this.$parse();\r\n        this.set('id', this.name);\r\n    },\r\n\r\n    refetch: function() {\r\n        this.calendar.getEventSourceById(this.name).refetch();\r\n    },\r\n\r\n    toCamelCase: function(str) {\r\n        return str.replace(/-(\\w)/g, function(a, b) {\r\n            return b.toUpperCase();\r\n        });\r\n    }\r\n\r\n});","dmx.Component('calendar-source', {\r\n\r\n    extends: 'calendar-source-base',\r\n\r\n    constructor: function(node, parent, source) {\r\n        this.parseEvents = this.parseEvents.bind(this);\r\n\r\n        dmx.Component('calendar-source-base').call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'events': {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'event-id': {\r\n            type: String,\r\n            default: 'id'\r\n        },\r\n\r\n        'event-title': {\r\n            type: String,\r\n            default: 'title'\r\n        },\r\n\r\n        'event-url': {\r\n            type: String,\r\n            default: 'url'\r\n        },\r\n\r\n        'event-start': {\r\n            type: String,\r\n            default: 'start'\r\n        },\r\n\r\n        'event-end': {\r\n            type: String,\r\n            default: 'end'\r\n        },\r\n\r\n        'event-all-day': {\r\n            type: String,\r\n            default: 'allDay'\r\n        },\r\n\r\n        'event-days-of-week': {\r\n            type: String,\r\n            default: 'daysOfWeek'\r\n        },\r\n\r\n        'event-start-time': {\r\n            type: String,\r\n            default: 'startTime'\r\n        },\r\n\r\n        'event-end-time': {\r\n            type: String,\r\n            default: 'endTime'\r\n        },\r\n\r\n        'event-start-recur': {\r\n            type: String,\r\n            default: 'startRecur'\r\n        },\r\n\r\n        'event-end-recur': {\r\n            type: String,\r\n            default: 'endRecur'\r\n        },\r\n\r\n        'event-group-id': {\r\n            type: String,\r\n            default: 'groupId'\r\n        },\r\n\r\n        'event-rendering': {\r\n            type: String,\r\n            default: 'rendering'\r\n        },\r\n\r\n        'event-color': {\r\n            type: String,\r\n            default: 'color'\r\n        },\r\n\r\n        'event-background-color': {\r\n            type: String,\r\n            default: 'backgroundColor'\r\n        },\r\n\r\n        'event-border-color': {\r\n            type: String,\r\n            default: 'borderColor'\r\n        },\r\n\r\n        'event-text-color': {\r\n            type: String,\r\n            default: 'textColor'\r\n        },\r\n\r\n        'event-class-name': {\r\n            type: String,\r\n            default: 'className'\r\n        },\r\n\r\n        'event-editable': {\r\n            type: String,\r\n            default: 'editable'\r\n        },\r\n\r\n        'event-overlap': {\r\n            type: String,\r\n            default: 'overlap'\r\n        },\r\n\r\n        'event-extended-props': {\r\n            type: String,\r\n            default: '$value'\r\n        }\r\n    },\r\n\r\n    parseEvents: function(info, success, failure) {\r\n        this.events = [];\r\n\r\n        if (Array.isArray(this.props.events)) {\r\n            dmx.repeatItems(this.props.events).forEach(function(data) {\r\n                var scope = new dmx.DataScope(data, this);\r\n                var event = {};\r\n\r\n                for (var prop in this.props) {\r\n                    if (prop.indexOf('event-') === 0) {\r\n                        var value = dmx.parse(this.props[prop], scope);\r\n\r\n                        if (value != null) {\r\n                            event[this.toCamelCase(prop.substr(6))] = value;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.events.push(event);\r\n            }, this);\r\n        }\r\n\r\n        this.children.forEach(function(child) {\r\n            if (child instanceof dmx.Component('calendar-event')) {\r\n                var event = { id: child.name };\r\n\r\n                for (var prop in child.props) {\r\n                    if (child.props[prop] != null) {\r\n                        event[this.toCamelCase(prop)] = child.props[prop];\r\n                    }\r\n                }\r\n\r\n                this.events.push(event);\r\n            }\r\n        }, this);\r\n\r\n        success(this.events);\r\n        \r\n        this.set('events', this.events);\r\n    },\r\n\r\n    render: function() {\r\n        if (!this.calendar) return;\r\n\r\n        this.$parse();\r\n\r\n        var props = {};\r\n\r\n        for (var prop in this.props) {\r\n            if (this.props[prop] != null) {\r\n                props[this.toCamelCase(prop)] = this.props[prop];\r\n            }\r\n        }\r\n        \r\n        this.calendar.addEventSource(Object.assign({\r\n            id: this.name\r\n        }, props, {\r\n            events: this.parseEvents\r\n        }));\r\n\r\n        this.set('id', this.name);\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!dmx.equal(props.events, this.props.events)) {\r\n            this.refetch();\r\n        }\r\n    }\r\n\r\n});","dmx.Component('calendar-source-google', {\r\n\r\n    extends: 'calendar-source-base',\r\n\r\n    constructor: function(node, parent, source) {\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onFailure = this.onFailure.bind(this);\r\n\r\n        dmx.Component('calendar-source-base').call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'google-calendar-api-key': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'google-calendar-id': {\r\n            type: String,\r\n            default: null\r\n        },\r\n    },\r\n\r\n    events: {\r\n        success: Event,\r\n        failure: Event\r\n    },\r\n\r\n    onSuccess: function() {\r\n        this.dispatchEvent('success');\r\n    },\r\n\r\n    onFailure: function(err) {\r\n        this.dispatchEvent('failure');\r\n    },\r\n\r\n    render: function() {\r\n        if (!this.calendar) return;\r\n\r\n        this.$parse();\r\n\r\n        var props = {};\r\n\r\n        for (var prop in this.props) {\r\n            if (this.props[prop] != null) {\r\n                props[this.toCamelCase(prop)] = this.props[prop];\r\n            }\r\n        }\r\n        \r\n        this.calendar.addEventSource(Object.assign({\r\n            id: this.name,\r\n            success: this.onSuccess,\r\n            failure: this.onFailure\r\n        }, props));\r\n\r\n        this.set('id', this.name);\r\n    }\r\n\r\n});","dmx.Component('calendar-event', {\r\n\r\n    constructor: function(node, parent, source) {\r\n        if (!(parent instanceof dmx.Component('calendar-source'))) {\r\n            console.error('calendar-event can only be child of calendar-source component.');\r\n        }\r\n\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        'title': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'url': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'start': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'end': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'all-day': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'days-of-week': { // For defining a simple recurring event\r\n            type: Array,\r\n            default: null\r\n        },\r\n\r\n        'start-time': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'end-time': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'start-recur': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'end-recur': { // For defining a simple recurring event\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'group-id': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'rendering': {\r\n            type: String, // background, inverse-background\r\n            default: null\r\n        },\r\n\r\n        'editable': {\r\n            type: Boolean,\r\n            default: null\r\n        },\r\n\r\n        'color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'background-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'border-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'text-color': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'class-name': {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'extended-props': {\r\n            type: Object,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    $parseAttributes: function(node) {\r\n        var self = this;\r\n\r\n        dmx.BaseComponent.prototype.$parseAttributes.call(this, node);\r\n\r\n        // constraint custom parse\r\n        this.parseAttribute(node, 'constraint').forEach(function(attr) {\r\n            if (attr.modifiers['business-hours']) {\r\n                // special case for businessHours modifier\r\n                self.props.constraint = 'businessHours';\r\n            } else {\r\n                if (attr.binding) {\r\n                    // dynamic attribute\r\n                    self.$addBinding(attr.value, function(value) {\r\n                        self.props.constraint = value;\r\n                    });\r\n                } else {\r\n                    // static attribute\r\n                    self.props.constraint = attr.value;\r\n                }\r\n            }\r\n\r\n            // we need to remove the attribute so that the default parser doesn't parse it\r\n            node.removeAttribute(attr.fullName);\r\n        });\r\n    },\r\n\r\n    update: function(props) {\r\n        if (!dmx.equal(props, this.props)) {\r\n            if (this.parent.refetch) {\r\n                this.parent.refetch();\r\n            }\r\n        }\r\n    },\r\n\r\n    // special parse required for constraint attribute\r\n    // supports static/dynamic attributes\r\n    parseAttribute: function(node, attrName) {\r\n        var attributes = [];\r\n        var re = new RegExp('^(dmx\\\\-bind:)?' + attrName.replace(/[-[\\]{}()*+?.,\\^$|#\\s]/g, '\\\\$&'), 'i');\r\n\r\n        if (node.nodeType == 1) {\r\n            for (var i = 0; i < node.attributes.length; i++) {\r\n                var attribute = node.attributes[i];\r\n\r\n                if (attribute && attribute.specified && re.test(attribute.name)) {\r\n                    var name = attribute.name;\r\n                    var argument = null;\r\n                    var modifiers = {};\r\n\r\n                    name = name.replace(/^dmx\\-bind:/i, '');\r\n\r\n                    name.split('.').forEach(function(part, i) {\r\n                        if (i === 0) {\r\n                            name = part;\r\n                        } else {\r\n                            var pos = part.indexOf(':');\r\n                            if (pos > 0) {\r\n                                modifiers[part.substr(0, pos)] = part.substr(pos + 1);\r\n                            } else {\r\n                                modifiers[part] = true;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    var pos = name.indexOf(':');\r\n                    if (pos > 0) {\r\n                        argument = name.substr(pos + 1);\r\n                        name = name.substr(0, pos);\r\n                    }\r\n\r\n                    attributes.push({\r\n                        name: name,\r\n                        binding: attribute.name.indexOf('dmx-bind:') === 0,\r\n                        fullName: attribute.name,\r\n                        value: attribute.value,\r\n                        argument: argument,\r\n                        modifiers: modifiers\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n});"]}