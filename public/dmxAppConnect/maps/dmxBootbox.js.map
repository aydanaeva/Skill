{"version":3,"sources":["actions/bootbox.js","components/bootbox.js"],"names":["dmx","Actions","bootbox.alert","options","self","this","Promise","resolve","callback","bootbox","alert","parse","bootbox.confirm","condition","then","Object","assign","else","result","_exec","confirm","bootbox.prompt","reject","prompt","Component","methods"],"mappings":";;;;;;AAAAA,IAAAC,QAAA,CAEAC,gBAAA,SAAAC,GACA,IAAAC,EAAAC,KAEA,OAAA,IAAAC,QAAA,SAAAC,GACAJ,EAAAK,SAAAD,EACAE,QAAAC,MAAAN,EAAAO,MAAAR,OAIAS,kBAAA,SAAAT,GACA,IAAAC,EAAAC,KAEA,OAAA,IAAAC,QAAA,SAAAC,GAGA,IAAAM,EAAA,CACAC,MAHAX,EAAAY,OAAAC,OAAA,GAAAb,IAGAW,KACAG,KAAAd,EAAAc,aAGAd,EAAAW,YACAX,EAAAc,KAEAd,EAAAK,SAAA,SAAAU,GACA,GAAAA,GACA,GAAAL,EAAAC,KACA,OAAAP,EAAAH,EAAAe,MAAAN,EAAAC,MAAAA,KAAA,WACA,OAAAI,UAGA,GAAAL,EAAAI,KACA,OAAAV,EAAAH,EAAAe,MAAAN,EAAAI,MAAAH,KAAA,WACA,OAAAI,KAIAX,EAAAW,IAGAT,QAAAW,QAAAhB,EAAAO,MAAAR,OAIAkB,iBAAA,SAAAlB,GACA,IAAAC,EAAAC,KAEA,OAAA,IAAAC,QAAA,SAAAC,EAAAe,GACAnB,EAAAK,SAAA,SAAAU,GACAX,EAAAW,IAEAT,QAAAc,OAAAnB,EAAAO,MAAAR,SCpDAH,IAAAwB,UAAA,UAAA,CAEAC,QAAA,CACAf,MAAA,SAAAP,GACAM,QAAAC,MAAAP","file":"../dmxBootbox/dmxBootbox.js","sourcesContent":["dmx.Actions({\r\n\r\n    'bootbox.alert': function(options) {\r\n        var self = this;\r\n\r\n        return new Promise(function(resolve) {\r\n            options.callback = resolve;\r\n            bootbox.alert(self.parse(options));\r\n        });\r\n    },\r\n\r\n    'bootbox.confirm': function(options) {\r\n        var self = this;\r\n\r\n        return new Promise(function(resolve) {\r\n            options = Object.assign({}, options);\r\n            \r\n            var condition = {\r\n                'then': options.then,\r\n                'else': options.else\r\n            };\r\n    \r\n            delete options.then;\r\n            delete options.else;\r\n    \r\n            options.callback = function(result) {\r\n                if (result) {\r\n                    if (condition.then) {\r\n                        return resolve(self._exec(condition.then).then(function() {\r\n                            return result;\r\n                        }));\r\n                    }\r\n                } else if (condition.else) {\r\n                    return resolve(self._exec(condition.else).then(function() {\r\n                        return result;\r\n                    }));\r\n                }\r\n\r\n                resolve(result);\r\n            };\r\n\r\n            bootbox.confirm(self.parse(options));\r\n        });\r\n    },\r\n\r\n    'bootbox.prompt': function(options) {\r\n        var self = this;\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            options.callback = function(result) {\r\n                resolve(result);\r\n            };\r\n            bootbox.prompt(self.parse(options));\r\n        });\r\n    }\r\n\r\n});","dmx.Component('bootbox', {\r\n\r\n    methods: {\r\n        alert: function(options) {\r\n            bootbox.alert(options);\r\n        }\r\n    }\r\n\r\n});"]}